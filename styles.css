@import url('https://fonts.googleapis.com/css?family=Ubuntu');  /* Importerar fonts som jag väljer så att andras webbläsare kan hämta dem om de saknas i deras browser. */

* {                                                             /* Sätter hela sidan till border-box för att undvika att den visas tokigt. */
    box-sizing: border-box;
}

body {
    font-family: 'Ubuntu', 'sans-serif';                        /* Väljer fonts för allt som visas i body, hämtas från google vid behov enligt länken ovan. */
    display: flex;                                              /* The element behaves like a block element and lays out its content according to the flexbox model. https://developer.mozilla.org/en-US/docs/Web/CSS/display */
    flex-direction: column;                                     /* (Don´t actually need it here) The flex container's main-axis is the same as the block-axis. The main-start and main-end points are the same as the before and after points of the writing-mode. https://developer.mozilla.org/en-US/docs/Web/CSS/flex-direction */
    align-items: center;                                        /* The CSS align-items property sets the align-self value on all direct children as a group. In Flexbox, it controls the alignment of items on the Cross Axis. In Grid Layout, it controls the alignment of items on the Block Axis within their grid area. https://developer.mozilla.org/en-US/docs/Web/CSS/align-items  */
    justify-content: center;                                    /* The CSS justify-content property defines how the browser distributes space between and around content items along the main-axis of a flex container, and the inline axis of a grid container. https://developer.mozilla.org/en-US/docs/Web/CSS/justify-content */
    height: 100vh;                                              /* A height of 100vh corresponds to the maximum possible viewport height. https://developer.mozilla.org/en-US/docs/Web/CSS/height */
    overflow: hidden;                                           /* The CSS Overflow module contains the features of CSS relating to scrollable overflow handling in visual media. In CSS overflow happens when the content of a box extends past one or more of the box's edges. https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Overflow */
    margin: 0;                                                  /* Sets margin top, left, bottom and right to 0 for the percentage-field. https://developer.mozilla.org/en-US/docs/Web/CSS/margin */
}

.bg {
    background: url('https://images.unsplash.com/photo-1576161787924-01bb08dad4a4?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2104&q=80') no-repeat center center/cover;  /*no-repeat: https://www.w3schools.com/cssref/playdemo.php?filename=playcss_background-repeat&preval=no-repeat. center: centers it. center/cover: centers it on the x an y axis and makes it cover for the background position.  */
    position: absolute;                                         /* The position CSS property sets how an element is positioned in a document. The top, right, bottom, and left properties determine the final location of positioned elements. https://developer.mozilla.org/en-US/docs/Web/CSS/position. */
    top: -30px;                                                 /* Decreases how far the whiteness stretches from the edge to the start of the blurry part of the image. */
    left: -30px;
    width: calc(100vw + 60px);                                  /* Vi kan skriva: width: 100vw; height: 100vh; men det vita i kanterna blir ojämt på respektive sida. Därför kör vi calc för att beräkna 100% av width och height och lägger till så att det blir 60px på båda sidor samt uppe och nere. (Syns tydligare om vi sätter blur till 70%) */
    height: calc(100vh + 60px);
    z-index: -1;                                               /* Sets the picture to be behind the percentage-text. */
    filter: blur(0px);                                        /* Initially the blur is set to 0% */
}

.loading-text {
    font-size: 50px;
    color: #fff;
}
